.\" Copyright 2023, Florent Revest <revest@chromium.org>
.\"
.\" SPDX-License-Identifier: Linux-man-pages-copyleft
.\"
.TH PR_SET_MDWE 2const (date) "Linux man-pages (unreleased)"
.SH NAME
PR_SET_MDWE
\-
set the Memory-Deny-Write-Execute protection mask for the calling process
.SH LIBRARY
Standard C library
.RI ( libc ", " \-lc )
.SH SYNOPSIS
.nf
.B #include <sys/prctl.h>
.P
.BI "int prctl(int " op ", ...);"
.fi
.SH DESCRIPTION
.TP
.BR PR_SET_MDWE " (since Linux 6.3)"
.\" commit b507808ebce23561d4ff8c2aa1fb949fe402bc61
Set the calling process' Memory-Deny-Write-Execute protection mask.
Once protection bits are set,
they can not be changed.
.I arg2
must be a bit mask of:
.RS
.TP
.B PR_MDWE_REFUSE_EXEC_GAIN
New memory mapping protections can't be writable and executable.
Non-executable mappings can't become executable.
.TP
.B PR_MDWE_NO_INHERIT " (since Linux 6.6)"
.\" commit 2a87e5520554034e8c423479740f95bea4a086a0
Do not propagate MDWE protection to child processes on
.BR fork (2).
Setting this bit requires setting
.B PR_MDWE_REFUSE_EXEC_GAIN
too.
.RE
.SH RETURN VALUE
On success,
0 is returned.
On error, \-1 is returned, and
.I errno
is set to indicate the error.
.SH ERRORS
.TP
.B EINVAL
.I arg2
is not a valid value for this
.IR op .
.SH STANDARDS
Linux.
.SH HISTORY
.SH SEE ALSO
.BR prctl (2),
.BR PR_GET_MDWE (2const)
