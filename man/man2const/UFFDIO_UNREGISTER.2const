.\" Copyright 2016, IBM Corporation.
.\" Written by Mike Rapoport <rppt@linux.vnet.ibm.com>
.\" Copyright 2016, Michael Kerrisk <mtk.manpages@gmail.com>
.\" Copyright 2024, Alejandro Colomar <alx@kernel.org>
.\"
.\" SPDX-License-Identifier: Linux-man-pages-copyleft
.\"
.TH UFFDIO_UNREGISTER 2const (date) "Linux man-pages (unreleased)"
.SH NAME
UFFDIO_UNREGISTER
\-
unregister a memory address range from userfaultfd
.SH LIBRARY
Standard C library
.RI ( libc ", " \-lc )
.SH SYNOPSIS
.nf
.BR "#include <linux/userfaultfd.h>" "  /* Definition of " UFFD* " constants */"
.B #include <sys/ioctl.h>
.P
.BI "int ioctl(int " fd ", UFFDIO_UNREGISTER, ...);"
.fi
.SH DESCRIPTION
(Since Linux 4.3.)
Unregister a memory address range from userfaultfd.
The pages in the range must be \[lq]compatible\[rq]
(see the description of
.BR UFFDIO_REGISTER .)
.P
The address range to unregister is specified in the
.I uffdio_range
structure pointed to by
.IR argp .
.SH RETURN VALUE
This
.BR ioctl (2)
operation returns 0 on success.
On error, \-1 is returned and
.I errno
is set to indicate the error.
.SH ERRORS
.TP
.B EINVAL
Either the
.I start
or the
.I len
field of the
.I ufdio_range
structure was not a multiple of the system page size; or the
.I len
field was zero; or these fields were otherwise invalid.
.TP
.B EINVAL
There as an incompatible mapping in the specified address range.
.TP
.B EINVAL
There was no mapping in the specified address range.
.SH STANDARDS
Linux.
.SH HISTORY
.SH EXAMPLES
See
.BR userfaultfd (2).
.SH SEE ALSO
.BR ioctl (2),
.BR ioctl_userfaultfd (2),
.BR UFFDIO_REGISTER (2const),
.BR userfaultfd (2)
.P
.I Documentation/admin\-guide/mm/userfaultfd.rst
in the Linux kernel source tree
