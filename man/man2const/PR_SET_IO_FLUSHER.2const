.\" Copyright 2020, Mike Christie <mchristi@redhat.com>
.\" Copyright 2020, Michael Kerrisk <mtk.manpages@gmail.com>
.\"
.\" SPDX-License-Identifier: Linux-man-pages-copyleft
.\"
.TH PR_SET_IO_FLUSHER 2const (date) "Linux man-pages (unreleased)"
.SH NAME
PR_SET_IO_FLUSHER
\-
change the IO_FLUSHER state
.SH LIBRARY
Standard C library
.RI ( libc ", " \-lc )
.SH SYNOPSIS
.nf
.B #include <sys/prctl.h>
.P
.BI "int prctl(int " op ", ..."
.BI "          \fR/*\fP unsigned long " arg2 ", unsigned long " arg3 ,
.BI "          unsigned long " arg4 ", unsigned long " arg5 " \fR*/\fP );"
.fi
.SH DESCRIPTION
.TP
.BR PR_SET_IO_FLUSHER " (since Linux 5.6)"
If a user process is involved in the block layer or filesystem I/O path,
and can allocate memory while processing I/O requests it must set
\fIarg2\fP to 1.
This will put the process in the IO_FLUSHER state,
which allows it special treatment to make progress when allocating memory.
If \fIarg2\fP is 0, the process will clear the IO_FLUSHER state, and
the default behavior will be used.
.IP
The calling process must have the
.B CAP_SYS_RESOURCE
capability.
.IP
.IR arg3 ,
.IR arg4 ,
and
.I arg5
must be zero.
.IP
The IO_FLUSHER state is inherited by a child process created via
.BR fork (2)
and is preserved across
.BR execve (2).
.IP
Examples of IO_FLUSHER applications are FUSE daemons, SCSI device
emulation daemons, and daemons that perform error handling like multipath
path recovery applications.
.SH RETURN VALUE
On success,
0 is returned.
On error, \-1 is returned, and
.I errno
is set to indicate the error.
.SH ERRORS
.TP
.B EINVAL
.I arg2
is not a valid value for this
.IR op .
.SH STANDARDS
Linux.
.SH HISTORY
.SH SEE ALSO
.BR prctl (2),
.BR PR_GET_IO_FLUSHER (2const)
