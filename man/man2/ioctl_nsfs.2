.\" Copyright (c) 2017 by Michael Kerrisk <mtk.manpages@gmail.com>
.\"
.\" SPDX-License-Identifier: Linux-man-pages-copyleft
.\"
.\"
.TH ioctl_nsfs 2 (date) "Linux man-pages (unreleased)"
.SH NAME
ioctl_nsfs
\-
ioctl() operations for Linux namespaces
.SH DESCRIPTION
.SS Discovering namespace relationships
.TP
.B NS_GET_USERNS
.TQ
.B NS_GET_PARENT
.SS Discovering the namespace type
.TP
.B NS_GET_NSTYPE
.\" ============================================================
.\"
.SS Discovering the owner of a user namespace
The
.B NS_GET_OWNER_UID
.\" commit 015bb305b8ebe8d601a238ab70ebdc394c7a19ba
operation (available since Linux 4.11) can be used to discover
the owner user ID of a user namespace (i.e., the effective user ID
of the process that created the user namespace).
The form of the call is:
.P
.in +4n
.EX
uid_t uid;
ioctl(fd, NS_GET_OWNER_UID, &uid);
.EE
.in
.P
.I fd
refers to a
.IR /proc/ pid /ns/user
file.
.P
The owner user ID is returned in the
.I uid_t
pointed to by the third argument.
.P
This operation can fail with the following error:
.TP
.B EINVAL
.I fd
does not refer to a user namespace.
.SH ERRORS
Any of the above
.BR ioctl ()
operations can return the following errors:
.TP
.B ENOTTY
.I fd
does not refer to a
.IR /proc/ pid /ns/ *
file.
.SH STANDARDS
Linux.
.SH SEE ALSO
.BR ioctl (2),
.BR NS_GET_USERNS (2const),
.BR NS_GET_PARENT (2const),
.BR NS_GET_NSTYPE (2const),
.BR fstat (2),
.BR proc (5),
.BR namespaces (7)
