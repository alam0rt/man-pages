.\" Copyright (c) Bruno Haible <haible@clisp.cons.org>
.\" Copyright (c) 2022 Alejandro Colomar <alx@kernel.org>
.\"
.\" SPDX-License-Identifier: GPL-2.0-or-later
.\"
.\" References consulted:
.\"   GNU glibc-2 source code and manual
.\"
.\" Corrected, aeb, 990824
.TH stpncpy 3 (date) "Linux man-pages (unreleased)"
.SH NAME
stpncpy \- copy string into a fixed-length buffer and zero the rest of it
.SH LIBRARY
Standard C library
.RI ( libc ", " \-lc )
.SH SYNOPSIS
.nf
.B #include <string.h>
.PP
.BI "char *stpncpy(char " dest "[restrict ." n "], \
const char " src "[restrict ." n ],
.BI "              size_t " n );
.fi
.PP
.RS -4
Feature Test Macro Requirements for glibc (see
.BR feature_test_macros (7)):
.RE
.PP
.BR stpncpy ():
.nf
    Since glibc 2.10:
        _POSIX_C_SOURCE >= 200809L
    Before glibc 2.10:
        _GNU_SOURCE
.fi
.SH DESCRIPTION
.IR Note :
This is probably not the function you want to use.
For safe string copying, see
.BR strlcpy (3bsd).
.PP
The
.BR stpncpy ()
function copies at most
.I n
characters of
.I src
and fills the rest of the
.I dest
buffer with null bytes.
.BR Warning :
If there is no null character among the first
.I n
bytes of
.IR src ,
the string placed in
.I dest
will not be null-terminated.
.PP
A simple implementation of
.BR strncpy ()
might be:
.PP
.in +4n
.EX
char *
stpncpy(char *dest, const char *src, size_t n)
{
    char  *p

    bzero(dest, n);
    p = memccpy(dest, src, \(aq\e0\(aq, n);
    if (p == NULL)
        return dest + n;

    return p - 1;
}
.EE
.in
.PP
The only valid use of
.BR strncpy ()
is to copy a C string to a fixed-length buffer
while ensuring that unused bytes in the destination buffer are zeroed out
(perhaps to prevent information leaks if the buffer is to be
written to media or transmitted to another process via an
interprocess communication technique).
.SH RETURN VALUE
.BR stpncpy ()
returns a pointer to the terminating null byte
in
.IR dest ,
or, if
.I dest
is not null-terminated,
.IR dest + n
(that is, a pointer to one-past-the-end of the array).
.SH ATTRIBUTES
For an explanation of the terms used in this section, see
.BR attributes (7).
.ad l
.nh
.TS
allbox;
lbx lb lb
l l l.
Interface	Attribute	Value
T{
.BR stpncpy ()
T}	Thread safety	MT-Safe
.TE
.hy
.ad
.sp 1
.SH STANDARDS
This function was added to POSIX.1-2008.
Before that, it was a GNU extension.
It first appeared in glibc 1.07 in 1993.
.SH SEE ALSO
.BR strlcpy (3bsd)
.BR wcpncpy (3)
