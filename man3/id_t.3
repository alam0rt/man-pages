.\" Copyright (c) 2020-2022 by Alejandro Colomar <colomar.6.4.3@gmail.com>
.\" and Copyright (c) 2020 by Michael Kerrisk <mtk.manpages@gmail.com>
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\" %%%LICENSE_END
.\"
.\"
.TH ID_T 3 2021-11-02 Linux "Linux Programmer's Manual"
.SH NAME
pid_t, uid_t, gid_t, id_t \- process/user/group identifier
.SH SYNOPSIS
.nf
.B #include <sys/types.h>
.PP
.BR typedef " /* ... */ " pid_t;
.BR typedef " /* ... */ " uid_t;
.BR typedef " /* ... */ " gid_t;
.BR typedef " /* ... */ " id_t;
.fi
.SH DESCRIPTION
.I pid_t
is a type used for storing process IDs, process group IDs, and session IDs.
According to POSIX, it shall be a signed integer type,
and the implementation shall support one or more programming environments
where the width of
.I pid_t
is no greater than the width of the type
.IR long .
.PP
.I uid_t
is a type used to hold user IDs.
According to POSIX,
it shall be an integer type.
.PP
.I gid_t
is a type used to hold group IDs.
According to POSIX,
it shall be an integer type.
.PP
.I id_t
is a type used to hold a general identifier.
According to POSIX,
it shall be an integer type that can be used to contain a
.IR pid_t ,
.IR uid_t ,
or
.IR gid_t .
.SH CONFORMING TO
POSIX.1-2001 and later.
.SH NOTES
The following headers also provide
.IR pid_t :
.IR <fcntl.h> ,
.IR <sched.h> ,
.IR <signal.h> ,
.IR <spawn.h> ,
.IR <sys/msg.h> ,
.IR <sys/sem.h> ,
.IR <sys/shm.h> ,
.IR <sys/wait.h> ,
.IR <termios.h> ,
.IR <time.h> ,
.IR <unistd.h> ,
and
.IR <utmpx.h> .
.PP
The following headers also provide
.IR uid_t :
.IR <pwd.h> ,
.IR <signal.h> ,
.IR <stropts.h> ,
.IR <sys/ipc.h> ,
.IR <sys/stat.h> ,
or
.IR <unistd.h> .
.PP
The following headers also provide
.IR gid_t :
.IR <grp.h> ,
.IR <pwd.h> ,
.IR <signal.h> ,
.IR <stropts.h> ,
.IR <sys/ipc.h> ,
.IR <sys/stat.h> ,
and
.IR <unistd.h> .
.PP
The following header also provides
.IR id_t :
.IR <sys/resource.h> .
.SH SEE ALSO
.BR chown (2),
.BR fork (2),
.BR getegid (2),
.BR geteuid (2),
.BR getgid (2),
.BR getgroups (2),
.BR getpgid (2),
.BR getpid (2),
.BR getppid (2),
.BR getpriority (2),
.BR getpwnam (3),
.BR getresgid (2),
.BR getresuid (2),
.BR getsid (2),
.BR gettid (2),
.BR getuid (2),
.BR kill (2),
.BR pidfd_open (2),
.BR sched_setscheduler (2),
.BR waitid (2),
.BR getgrnam (3),
.BR sigqueue (3),
.BR credentials (7)
